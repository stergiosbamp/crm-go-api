openapi: 3.0.0

info:
  title: Customer Management API
  description: |-
    API for Customer Management.
  version: 0.0.1

servers:
  - url: http://localhost:8080/v1
    description: A localy developed API, e.g. Development (local) server

tags:
  - name: Customers
    description: Managing customers
  - name: Contacts
    description: Managing contacts
  - name: Addresses
    description: Managing addresses

paths:
  # Customers Management
  /customers:
    get:
      tags:
        - Customers
      summary: Returns a list of customers.
      responses:
        '200':
          description: OK
          content:
            application/json:
              # TODO: Add pagination later
              schema:
                type: array
                items:  
                  $ref: "#/components/schemas/Customer"
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
    post:
      tags:
       - Customers
      summary: Creates a new customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerPost"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
            
  /customers/{id}:
    get:
      tags:
        - Customers
      summary: Returns a customers for a given ID.
      parameters:
        - name: id
          in: path
          description: ID of the customer to return
          required: true
          schema:
            format: integer
        
      responses:
        '200':
          description: OK
          content:
            application/json:
              # TODO: Add pagination later
              schema:
                $ref: "#/components/schemas/Customer"
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
    put:
      tags:
        - Customers
      summary: Updates a customer for a given ID.
      parameters:
        - name: id
          in: path
          description: ID of the customer to return
          required: true
          schema:
            format: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerPut"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerPutResponse"
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
    patch:
      tags:
        - Customers
      summary: Patches (status change) a customer for a given ID.
      parameters:
        - name: id
          in: path
          description: ID of the customer to patch
          required: true
          schema:
            format: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerPatch"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerPatchResponse"
    delete:
      tags:
        - Customers
      summary: Deletes a customer for a given ID.
      parameters:
        - name: id
          in: path
          description: ID of the customer to patch
          required: true
          schema:
            format: integer
      responses:
        '204':
          description: Delete success
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'

  /customers/import:
    post:
      tags:
        - Customers
      summary: Imports customers from CSV/XLSX files.
      requestBody:
        description: Upload the file with customers for import
        content:
           application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Success
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportError'
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
  
  /customers/export:
    get:
      tags:
        - Customers
      summary: Exports customers from database to CSV/XLSX files.
      responses:
        '200':
          description: Success
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'

  # Contacts Management
  /contacts:
    get:
      tags:
        - Contacts
      summary: Returns a list of contacts.
      responses:
        '200':
          description: OK
          content:
            application/json:
              # TODO: Add pagination later
              schema:
                type: array
                items:  
                  $ref: "#/components/schemas/Contact"
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
    post:
      tags:
       - Contacts
      summary: Creates a new contact.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactPost"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contact"
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'

  /contacts/{id}:
    get:
      tags:
        - Contacts
      summary: Returns a contact for a given ID.
      parameters:
        - name: id
          in: path
          description: ID of the contact to return
          required: true
          schema:
            format: integer
        
      responses:
        '200':
          description: OK
          content:
            application/json:
              # TODO: Add pagination later
              schema:
                $ref: "#/components/schemas/Contact"
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
    put:
      tags:
        - Contacts
      summary: Updates a contact for a given ID.
      parameters:
        - name: id
          in: path
          description: ID of the contact to return
          required: true
          schema:
            format: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactPut"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactPutResponse"
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
    delete:
      tags:
        - Customers
      summary: Deletes a customer for a given ID.
      parameters:
        - name: id
          in: path
          description: ID of the customer to patch
          required: true
          schema:
            format: integer
      responses:
        '204':
          description: Delete success
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'

components:
  schemas:
    DefaultResponse:
      type: object
      properties:
        errorCode:
          type: integer
        message:
          type: string
  
    Customer:
      type: object
      properties:
        id:
          type: integer
          example: 32
        active:
          type: boolean
          example: true
        name:
          type: string
          example: Test Inc.
        shortName:
          type: string
          example: tt01
        vatNumber:
          type: string
          example: 265 478
        vatApply:
          type: boolean
          example: true
        registrationNumber:
          type: string
          example: 24378253
        dunsNumber:
          type: string
          example: 23678167
        taxExempt:
          type: boolean
          example: false
        language:
          type: string
          example: en
        email:
          type: string
          example: test@test.com
        phone:
          type: string
          example: 38162558587
        fax:
          type: string
          example: 23467237868

    CustomerPost:
      type: object
      properties:
        active:
          type: boolean
          example: true
        name:
          type: string
          example: Test Inc.
        shortName:
          type: string
          example: tt01
        vatNumber:
          type: string
          example: 265 478
        vatApply:
          type: boolean
          example: true
        registrationNumber:
          type: string
          example: 24378253
        dunsNumber:
          type: string
          example: 23678167
        taxExempt:
          type: boolean
          example: false
        language:
          type: string
          example: en
        email:
          type: string
          example: test@test.com
        phone:
          type: string
          example: 38162558587
        fax:
          type: string
          example: 23467237868

    CustomerPut:
      type: object
      properties:
        active:
          type: boolean
          example: true
        name:
          type: string
          example: Test Inc.
        shortName:
          type: string
          example: tt02
        vatNumber:
          type: string
          example: 265 478
        vatApply:
          type: boolean
          example: true
        registrationNumber:
          type: string
          example: 24378253
        dunsNumber:
          type: string
          example: 23678167
        taxExempt:
          type: boolean
          example: false
        language:
          type: string
          example: gr
        email:
          type: string
          example: test2@test2.com
        phone:
          type: string
          example: 38162558587
        fax:
          type: string
          example: 23467237868

    CustomerPutResponse:
      type: object
      properties:
        id:
          type: integer
          example: 12
        active:
          type: boolean
          example: true
        name:
          type: string
          example: Test Inc.
        shortName:
          type: string
          example: tt02
        vatNumber:
          type: string
          example: 265 478
        vatApply:
          type: boolean
          example: true
        registrationNumber:
          type: string
          example: 24378253
        dunsNumber:
          type: string
          example: 23678167
        taxExempt:
          type: boolean
          example: false
        language:
          type: string
          example: gr
        email:
          type: string
          example: test2@test2.com
        phone:
          type: string
          example: 38162558587
        fax:
          type: string
          example: 23467237868

    CustomerPatch:
      type: object
      properties:
        active:
          type: boolean
          example: false

    CustomerPatchResponse:
      type: object
      properties:
        id:
          type: integer
          example: 12
        active:
          type: boolean
          example: false
        name:
          type: string
          example: Test Inc.
        shortName:
          type: string
          example: tt01
        vatNumber:
          type: string
          example: 265 478
        vatApply:
          type: boolean
          example: true
        registrationNumber:
          type: string
          example: 24378253
        dunsNumber:
          type: string
          example: 23678167
        taxExempt:
          type: boolean
          example: false
        language:
          type: string
          example: en
        email:
          type: string
          example: test@test.com
        phone:
          type: string
          example: 38162558587
        fax:
          type: string
          example: 23467237868

    ImportError:
      type: object
      properties:
        message:
          type: string
          example: Email is in incorrect format.
    
    Contact:
      type: object
      properties:
        id:
          type: integer
          example: 17
        contactType:
          type: string
          example: CEO
          enum:
            - Commercial
            - Finance
            - Legal
            - CEO
            - Other
            - DPO
            - Technical
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        nickName:
          type: string
          example: Jo
        gender:
          type: string
          example: male
        birthday:
          type: string
          format: date
          example: 1990-01-13
        language:
          type: string
          example: en
        jobTitle:
          type: string
          example: Marketing manager
        email:
          type: string
          example: john@doe.com
        skype:
          type: string
          example: john.doe
        phoneDirect:
          type: string
          example: 38162558587
        phoneOffice:
          type: string
          example: 38162558587
        phoneMobile:
          type: string
          example: 38162558587
        notes:
          type: string
          example: This is a note.
        customer:
          $ref: '#/components/schemas/Customer'
        address:
          $ref: '#/components/schemas/AddressContact'
        
    ContactPost:
      type: object
      properties:
        contactType:
          type: string
          example: Finance
          enum:
            - Commercial
            - Finance
            - Legal
            - CEO
            - Other
            - DPO
            - Technical
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        nickName:
          type: string
          example: Jo
        gender:
          type: string
          example: male
        birthday:
          type: string
          format: date
          example: 1990-01-13
        language:
          type: string
          example: en
        jobTitle:
          type: string
          example: Marketing manager
        email:
          type: string
          example: john@doe.com
        skype:
          type: string
          example: john.doe
        phoneDirect:
          type: string
          example: 38162558587
        phoneOffice:
          type: string
          example: 38162558587
        phoneMobile:
          type: string
          example: 38162558587
        notes:
          type: string
          example: This is a note.
        customerId:
          type: integer
          example: 32
        addressId:
          type: integer
          example: 2

    ContactPut:
      type: object
      properties:
        contactType:
          type: string
          example: CEO
          enum:
            - Commercial
            - Finance
            - Legal
            - CEO
            - Other
            - DPO
            - Technical
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        nickName:
          type: string
          example: Jo
        gender:
          type: string
          example: male
        birthday:
          type: string
          format: date
          example: 2000-01-13
        language:
          type: string
          example: en
        jobTitle:
          type: string
          example: Marketing manager
        email:
          type: string
          example: john@doe.com
        skype:
          type: string
          example: john.doe
        phoneDirect:
          type: string
          example: 38162558587
        phoneOffice:
          type: string
          example: 38162558587
        phoneMobile:
          type: string
          example: 38162558587
        notes:
          type: string
          example: This is a note.
        customer:
          type: integer
          example: 10
        addressId:
          type: integer
          example: 5

    ContactPutResponse:
      type: object
      properties:
        id:
          type: integer
          example: 15
        contactType:
          type: string
          example: CEO
          enum:
            - Commercial
            - Finance
            - Legal
            - CEO
            - Other
            - DPO
            - Technical
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        nickName:
          type: string
          example: Jo
        gender:
          type: string
          example: male
        birthday:
          type: string
          format: date
          example: 2000-01-13
        language:
          type: string
          example: en
        jobTitle:
          type: string
          example: Marketing manager
        email:
          type: string
          example: john@doe.com
        skype:
          type: string
          example: john.doe
        phoneDirect:
          type: string
          example: 38162558587
        phoneOffice:
          type: string
          example: 38162558587
        phoneMobile:
          type: string
          example: 38162558587
        notes:
          type: string
          example: This is a note.
        customerId:
          type: integer
          example: 10
        addressId:
          type: integer
          example: 5

    AddressContact:
      type: object
      properties:
        id:
          type: integer
          example: 5
        type:
          type: string
          example: contact
        address:
          type: string
          example: Balkanska 3
        pobox:
          type: string
          example: 123585
        postal_code:
          type: string
          example: 523323
        city:
          type: string
          example: Paracin
        province:
          type: string
          example: Pomoravlje
        country:
          type: string
          example: Serbia
    
    AddressCustomer:
      type: object
      properties:
        id:
          type: integer
          example: 5
        customer:
          $ref: '#/components/schemas/Customer'
        type:
          type: string
          example: legal
          enum:
            - legal
            - branch
        address:
          type: string
          example: Bolacker 1
        pobox:
          type: string
          example: 123585
        postal_code:
          type: string
          example: 4563
        city:
          type: string
          example: Paracin
        province:
          type: string
          example: Pomoravlje
        country:
          type: string
          example: Serbia
        attention_person:
          type: string
          example: CH