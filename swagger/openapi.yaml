openapi: 3.0.0

info:
  title: Customer Management API
  description: |-
    API for Customer Management.
  version: 0.0.1

servers:
  - url: http://localhost:8080/v1
    description: A localy developed API, e.g. Development (local) server

tags:
  - name: Customers
    description: Managing customers
  - name: Contacts
    description: Managing contacts
  - name: Addresses
    description: Managing addresses

paths:
  # Customers Management
  /customers:
    get:
      tags:
        - Customers
      summary: Returns a list of customers.
      responses:
        '200':
          description: OK
          content:
            application/json:
              # TODO: Add pagination later
              schema:
                type: array
                items:  
                  $ref: "#/components/schemas/Customer"
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
    post:
      tags:
       - Customers
      summary: Creates a new customer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerPost"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
            
  /customers/{id}:
    get:
      tags:
        - Customers
      summary: Returns a customers for a given ID.
      parameters:
        - name: id
          in: path
          description: ID of the customer to return
          required: true
          schema:
            format: integer
        
      responses:
        '200':
          description: OK
          content:
            application/json:
              # TODO: Add pagination later
              schema:
                type: array
                items:  
                  $ref: "#/components/schemas/Customer"
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
    put:
      tags:
        - Customers
      summary: Updates a customer for a given ID.
      parameters:
        - name: id
          in: path
          description: ID of the customer to return
          required: true
          schema:
            format: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerPut"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerPutResponse"
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
    patch:
      tags:
        - Customers
      summary: Patches (status change) a customer for a given ID.
      parameters:
        - name: id
          in: path
          description: ID of the customer to patch
          required: true
          schema:
            format: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerPatch"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerPatchResponse"
    delete:
      tags:
        - Customers
      summary: Deletes a customer for a given ID.
      parameters:
        - name: id
          in: path
          description: ID of the customer to patch
          required: true
          schema:
            format: integer
      responses:
        '204':
          description: Delete success
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'

  /customers/import:
    post:
      tags:
        - Customers
      summary: Imports customers from CSV/XLSX files.
      requestBody:
        description: Upload the file with customers for import
        content:
           application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Success
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportError'
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
  
  /customers/export:
    get:
      tags:
        - Customers
      summary: Exports customers from database to CSV/XLSX files.
      responses:
        '200':
          description: Success
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'


components:
  schemas:
    DefaultResponse:
      type: object
      properties:
        errorCode:
          type: integer
        message:
          type: string
  
    Customer:
      type: object
      properties:
        id:
          type: integer
          example: 32
        active:
          type: boolean
          example: true
        name:
          type: string
          example: Test Inc.
        short_name:
          type: string
          example: tt01
        vat_number:
          type: string
          example: 265 478
        vat_apply:
          type: boolean
          example: true
        registration_number:
          type: string
          example: 24378253
        duns_number:
          type: string
          example: 23678167
        tax_exempt:
          type: boolean
          example: false
        language:
          type: string
          example: en
        email:
          type: string
          example: test@test.com
        phone:
          type: string
          example: 38162558587
        fax:
          type: string
          example: 23467237868

    CustomerPost:
      type: object
      properties:
        active:
          type: boolean
          example: true
        name:
          type: string
          example: Test Inc.
        short_name:
          type: string
          example: tt01
        vat_number:
          type: string
          example: 265 478
        vat_apply:
          type: boolean
          example: true
        registration_number:
          type: string
          example: 24378253
        duns_number:
          type: string
          example: 23678167
        tax_exempt:
          type: boolean
          example: false
        language:
          type: string
          example: en
        email:
          type: string
          example: test@test.com
        phone:
          type: string
          example: 38162558587
        fax:
          type: string
          example: 23467237868

    CustomerPut:
      type: object
      properties:
        short_name:
          type: string
          example: tt02
        language:
          type: string
          example: gr
        email:
          type: string
          example: test2@test2.com
        phone:
          type: string
          example: 38162558587

    CustomerPutResponse:
      type: object
      properties:
        id:
          type: integer
          example: 12
        active:
          type: boolean
          example: true
        name:
          type: string
          example: Test Inc.
        short_name:
          type: string
          example: tt02
        vat_number:
          type: string
          example: 265 478
        vat_apply:
          type: boolean
          example: true
        registration_number:
          type: string
          example: 24378253
        duns_number:
          type: string
          example: 23678167
        tax_exempt:
          type: boolean
          example: false
        language:
          type: string
          example: gr
        email:
          type: string
          example: test2@test2.com
        phone:
          type: string
          example: 38162558587
        fax:
          type: string
          example: 23467237868

    CustomerPatch:
      type: object
      properties:
        active:
          type: boolean
          example: false

    CustomerPatchResponse:
      type: object
      properties:
        id:
          type: integer
          example: 12
        active:
          type: boolean
          example: false
        name:
          type: string
          example: Test Inc.
        short_name:
          type: string
          example: tt01
        vat_number:
          type: string
          example: 265 478
        vat_apply:
          type: boolean
          example: true
        registration_number:
          type: string
          example: 24378253
        duns_number:
          type: string
          example: 23678167
        tax_exempt:
          type: boolean
          example: false
        language:
          type: string
          example: en
        email:
          type: string
          example: test@test.com
        phone:
          type: string
          example: 38162558587
        fax:
          type: string
          example: 23467237868

    ImportError:
      type: object
      properties:
        message:
          type: string
          example: Email is in incorrect format.